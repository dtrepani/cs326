TDScriptLeafNode {	#name : 'deploy',	#contents : '[ :topez :objIn :tokens :windowId | | project version versions constructor packageNames methodSections gofer spec |Transcript  cr;  show: \'Deploying Metacello: \' , DateAndTime now asString.false  ifTrue: [     \"get fresh copy of ConfigurationOfMetacello from github\"    spec := Metacello new      configuration: \'Metacello\';      repository: \'github://dalehenrich/metacello-work:1.0-beta.31/repository\';      get ]  ifFalse: [     spec := Metacello image      configuration: \'Metacello\';      list ].\"---collect versions---\"versions := Array new.project := ConfigurationOfMetacello project.version := project version: #\'stable\'.versions add: version.\"---collect method sections for each version---\"packageNames := Set new.methodSections := #().versions  do: [ :sourceVersion |     constructor := MetacelloToolBoxConstructor new.    constructor configuration: ConfigurationOfMetacello new.    constructor extractMethodSectionsFor: sourceVersion versionString.    methodSections := methodSections , constructor methodSections ].\"---collect packageNames for each section---\"methodSections  do: [ :methodSection |     | versionSpec |    versionSpec := methodSection versionSpec.    versionSpec packages      specListDo: [ :packageSpec | packageSpec getFile ifNotNil: [ :file | packageNames add: file ] ] ].packageNames := packageNames asArray sorted.\"---fetch---\"gofer := Gofer new.spec repositories  do: [ :repoSpec | gofer repository: repoSpec createRepository ].packageNames do: [ :packageName | gofer version: packageName ].gofer fetch.\"---push packages---\"gofer := Gofer new.packageNames do: [ :packageName | gofer version: packageName ].#(\'http://www.squeaksource.com/metacello\' \'http://seaside.gemstone.com/ss/metacello\')  do: [ :description |     | repos |    repos := TDMonticelloTool new repositoryFromDescription: description.    (repos user isEmpty or: [ repos password isEmpty ])      ifTrue: [ repos error: \'need to set user/pass for: \' , description printString ].    gofer repository: repos ].gofer push.\"---fetch configuration---\"gofer := Gofer new.#(\'github://dalehenrich/metacello-work:1.0-beta.31/repository\')  do: [ :description |     | repos |    repos := TDMonticelloTool new repositoryFromDescription: description.    gofer repository: repos ].#(\'ConfigurationOfMetacello\') do: [ :packageName | gofer package: packageName ].gofer fetch.\"---push configuration---\"    gofer := Gofer new.    #(\'ConfigurationOfMetacello\')      do: [ :packageName | gofer package: packageName ].    #(\'http://www.squeaksource.com/MetacelloRepository\' \'http://seaside.gemstone.com/ss/MetacelloRepository\' \'http://seaside.gemstone.com/ss/metacello\')      do: [ :description |         | repos |        repos := TDMonticelloTool new repositoryFromDescription: description.        (repos user isEmpty or: [ repos password isEmpty ])          ifTrue: [ repos error: \'need to set user/pass for: \' , description printString ].        gofer repository: repos ].    gofer push .Transcript  cr;  show: \'... finished deploying Metacello: \' , DateAndTime now asString ]'}